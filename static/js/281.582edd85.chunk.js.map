{"version":3,"file":"static/js/281.582edd85.chunk.js","mappings":"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","sources":["components/TrendingList/TrendingList.jsx","components/TrendingList/TrendingList.styled.js","helpers/api.jsx","components/Searchbar/Searchbar.styled.js","components/Searchbar/Searchbar.jsx","pages/Movies.jsx"],"sourcesContent":["import { useLocation } from 'react-router-dom';\nimport { Image, Item, List, MovieLink } from './TrendingList.styled';\nimport PropTypes from 'prop-types';\n\nexport const TrendingList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {movies.map(({ id, title, poster_path }) => (\n        <Item key={id}>\n          <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n            <Image\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w200${poster_path}`\n                  : `https://screench.com/upload/no-poster.jpeg`\n              }\n              alt={title}\n            />\n            <p>{title}</p>\n          </MovieLink>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nTrendingList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 18px;\n  padding: 0;\n  margin-bottom: 32px;\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  position: relative;\n  width: calc((100% - 54px) / 4);\n  display: flex;\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 331px;\n  object-fit: cover;\n  margin-bottom: 12px;\n`;\n\nexport const TitlePage = styled.h2`\n  text-align: center;\n  margin: 16px 0px;\n`;\n\nexport const MovieLink = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  font-weight: 500;\n  text-align: center;\n  text-decoration: none;\n  color: black;\n`;\n","import axios from 'axios';\n\nconst BASE_URL = `https://api.themoviedb.org/3`;\nconst API_KEY = `fe343f967605f386408b9306e9b3c54f`;\n\nexport const fetchTrendingMovies = async () => {\n  const resp = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return resp.data;\n};\n\nexport const fetchMovieById = async id => {\n  const resp = await axios.get(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`);\n  return resp.data;\n};\n\nexport const fetchMovieCast = async id => {\n  const resp = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n  );\n  return resp.data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const resp = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  return resp.data;\n};\n\nexport const fetchMovieByKeyWord = async query => {\n  const resp = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return resp.data;\n};\n","import styled from '@emotion/styled';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 24px;\n  width: 100%;\n  max-width: 400px;\n  border-radius: 3px;\n  overflow: hidden;\n  border: 1px solid orangered;\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  :hover {\n    opacity: 1;\n  }\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 12px;\n  padding-right: 12px;\n`;\n","import { Button, Input, SearchForm } from './Searchbar.styled';\nimport { BsSearch } from 'react-icons/bs';\nimport PropTypes from 'prop-types';\n\nexport const Searchbar = ({ onSubmit }) => {\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    onSubmit(form.elements.query.value.toLowerCase());\n    form.reset();\n  };\n\n  return (\n    <SearchForm onSubmit={handleSubmit}>\n      <Input type=\"text\" name=\"query\" />\n      <Button type=\"submit\">\n        <BsSearch />\n      </Button>\n    </SearchForm>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { Searchbar } from 'components/Searchbar/Searchbar';\nimport { TrendingList } from 'components/TrendingList/TrendingList';\nimport { fetchMovieByKeyWord } from 'helpers/api';\nimport { useEffect, useMemo } from 'react';\nimport { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport toast, { Toaster } from 'react-hot-toast';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const params = useMemo(\n    () => Object.fromEntries([...searchParams]),\n    [searchParams]\n  );\n  const { query } = params;\n\n  useEffect(() => {\n    if (!query) {\n      setMovies([]);\n      return;\n    }\n\n    const fetchKeyWord = async () => {\n      try {\n        const { results } = await fetchMovieByKeyWord(query);\n\n        if (results.length === 0) {\n          return toast.error(`Nothing found for ${query}!`);\n        }\n\n        setMovies(results);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    fetchKeyWord();\n  }, [query]);\n\n  const handleSubmit = newQuery => {\n    if (newQuery.trim() === '') {\n      toast(`Please, enter the movie name for searching!`, {\n        style: {\n          borderRadius: '10px',\n          background: '#333',\n          color: '#fff',\n        },\n      });\n    }\n    const checkedQuery = newQuery !== '' ? { query: newQuery } : {};\n    setSearchParams(checkedQuery);\n  };\n\n  return (\n    <main>\n      <Toaster position=\"top-right\" reverseOrder={false} />\n      <Searchbar onSubmit={handleSubmit} />\n      {movies.length > 0 && <TrendingList movies={movies} />}\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["TrendingList","movies","location","useLocation","map","id","title","poster_path","to","state","from","src","alt","List","styled","Item","Image","TitlePage","MovieLink","Link","BASE_URL","API_KEY","fetchTrendingMovies","axios","resp","data","fetchMovieById","fetchMovieCast","fetchMovieReviews","fetchMovieByKeyWord","query","SearchForm","Button","Input","Searchbar","onSubmit","e","preventDefault","form","currentTarget","elements","value","toLowerCase","reset","type","name","useState","setMovies","useSearchParams","searchParams","setSearchParams","useMemo","Object","fromEntries","useEffect","fetchKeyWord","results","length","toast","console","log","position","reverseOrder","newQuery","trim","style","borderRadius","background","color"],"sourceRoot":""}