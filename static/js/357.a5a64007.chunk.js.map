{"version":3,"file":"static/js/357.a5a64007.chunk.js","mappings":"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","sources":["helpers/api.jsx","components/AdditionalInfo/AdditionalInfo.styled.js","components/AdditionalInfo/AdditionalInfo.jsx","components/BackLink/BackLink.styled.js","components/BackLink/BackLink.jsx","components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = `https://api.themoviedb.org/3`;\nconst API_KEY = `fe343f967605f386408b9306e9b3c54f`;\n\nexport const fetchTrendingMovies = async () => {\n  const resp = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return resp.data;\n};\n\nexport const fetchMovieById = async id => {\n  const resp = await axios.get(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`);\n  return resp.data;\n};\n\nexport const fetchMovieCast = async id => {\n  const resp = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n  );\n  return resp.data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const resp = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  return resp.data;\n};\n\nexport const fetchMovieByKeyWord = async query => {\n  const resp = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return resp.data;\n};\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const InfoBox = styled.div`\n  padding: 0px 16px;\n  margin-bottom: 24px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: space-around;\n  margin-top: 12px;\n  width: 200px;\n  gap: 12px;\n`;\n\nexport const InfoLink = styled(NavLink)`\n  font-weight: 500;\n  text-decoration: none;\n  color: black;\n\n  &.active {\n    color: orangered;\n  }\n`;\n","import { InfoBox, InfoLink, List } from './AdditionalInfo.styled';\n\nexport const AdditionalInfo = () => {\n  return (\n    <InfoBox>\n      <h3>Additional information</h3>\n      <List>\n        <li>\n          <InfoLink to=\"cast\">Cast</InfoLink>\n        </li>\n        <li>\n          <InfoLink to=\"reviews\">Reviews</InfoLink>\n        </li>\n      </List>\n    </InfoBox>\n  );\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n","import { TiArrowBack } from 'react-icons/ti';\nimport { StyledLink } from './BackLink.styled';\nimport PropTypes from 'prop-types';\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <TiArrowBack size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n\nBackLink.propTypes = {\n  to: PropTypes.shape({\n    current: PropTypes.object,\n  }).isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Card = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 24px;\n  margin-top: 12px;\n  margin-bottom: 24px;\n`;\n\nexport const CardInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n`;\n","import { Card, CardInfo } from './MovieCard.styled';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({ movie, userVote, genres }) => {\n  return (\n    <Card>\n      <img\n        src={\n          movie.poster_path\n            ? `https://image.tmdb.org/t/p/w300${movie.poster_path}`\n            : `https://screench.com/upload/no-poster.jpeg`\n        }\n        alt={movie.title}\n        width={300}\n      />\n      <CardInfo>\n        <h2>{movie.title}</h2>\n        <p>User score: {userVote}%</p>\n        <h3>Overview</h3>\n        {movie.overview ? (\n          <p>{movie.overview}</p>\n        ) : (\n          <p>There is no description for this movie!</p>\n        )}\n        <h3>Genres</h3>\n        <p>{genres ? genres : 'Other'}</p>\n      </CardInfo>\n    </Card>\n  );\n};\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string,\n    poster_path: PropTypes.string,\n    overview: PropTypes.string,\n  }).isRequired,\n  userVote: PropTypes.number.isRequired,\n  genres: PropTypes.string.isRequired,\n};\n","import { AdditionalInfo } from 'components/AdditionalInfo/AdditionalInfo';\nimport { BackLink } from 'components/BackLink/BackLink';\nimport { MovieCard } from 'components/MovieCard/MovieCard';\nimport { fetchMovieById } from 'helpers/api';\nimport { Suspense, useEffect, useMemo, useRef, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n\n  const [movie, setMovie] = useState({});\n  const [genres, setGenres] = useState('');\n  const [userScore, setUserScore] = useState();\n\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? `/movies`);\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        const film = await fetchMovieById(movieId);\n        setMovie(film);\n        const genres = film.genres.map(({ name }) => name).join(', ');\n        setGenres(genres);\n        setUserScore(film.vote_average);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchMovie();\n  }, [movieId]);\n\n  const userVote = useMemo(() => {\n    return Math.round(userScore * 10);\n  }, [userScore]);\n\n  return (\n    <main>\n      <BackLink to={backLinkHref.current}>Go back</BackLink>\n      <MovieCard movie={movie} userVote={userVote} genres={genres} />\n      <AdditionalInfo />\n      <Suspense fallback={<div>Loading... </div>}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["BASE_URL","API_KEY","fetchTrendingMovies","axios","resp","data","fetchMovieById","id","fetchMovieCast","fetchMovieReviews","fetchMovieByKeyWord","query","InfoBox","styled","List","InfoLink","NavLink","AdditionalInfo","to","StyledLink","Link","BackLink","children","size","Card","CardInfo","MovieCard","movie","userVote","genres","src","poster_path","alt","title","width","overview","movieId","useParams","useState","setMovie","setGenres","userScore","setUserScore","location","useLocation","backLinkHref","useRef","state","from","useEffect","fetchMovie","film","map","name","join","vote_average","console","log","useMemo","Math","round","current","Suspense","fallback"],"sourceRoot":""}