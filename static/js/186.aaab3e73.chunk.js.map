{"version":3,"file":"static/js/186.aaab3e73.chunk.js","mappings":"wOAuCA,UAlCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,gHAEUC,EAAAA,EAAAA,IAAkBP,GAF5B,gBAERQ,EAFQ,EAERA,QACRJ,EAAWI,GAHK,gDAKhBC,QAAQC,IAAR,MALgB,yDAAH,qDAQjBJ,GACD,GAAE,CAACN,KAGF,8BACE,SAAC,IAAD,UACGG,EAAQQ,OAAS,EAChBR,EAAQS,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,2BACE,UAAC,IAAD,sBAAsBD,MACtB,uBAAIC,MAFGF,EADC,KAOZ,wEAKT,C,wGCnCYG,EAAOC,EAAAA,EAAAA,GAAH,iIAQJC,EAAcD,EAAAA,EAAAA,GAAH,8C,mMCRlBE,EAAQ,+BACRC,EAAO,mCAEAC,EAAmB,mCAAG,oGACdC,EAAAA,EAAAA,IAAA,UACdH,EADc,uCACyBC,IAFX,cAC3BG,EAD2B,yBAI1BA,EAAKC,MAJqB,2CAAH,qDAOnBC,EAAc,mCAAG,WAAMZ,GAAN,uFACTS,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BN,EAA/B,oBAA6CO,IADpC,cACtBG,EADsB,yBAErBA,EAAKC,MAFgB,2CAAH,sDAKdE,EAAc,mCAAG,WAAMb,GAAN,uFACTS,EAAAA,EAAAA,IAAA,UACdH,EADc,kBACIN,EADJ,4BAC0BO,IAFjB,cACtBG,EADsB,yBAIrBA,EAAKC,MAJgB,2CAAH,sDAOdjB,EAAiB,mCAAG,WAAMM,GAAN,uFACZS,EAAAA,EAAAA,IAAA,UACdH,EADc,kBACIN,EADJ,4BAC0BO,IAFd,cACzBG,EADyB,yBAIxBA,EAAKC,MAJmB,2CAAH,sDAOjBG,EAAmB,mCAAG,WAAMC,GAAN,uFACdN,EAAAA,EAAAA,IAAA,UACdH,EADc,iCACmBC,EADnB,kBACoCQ,IAFtB,cAC3BL,EAD2B,yBAI1BA,EAAKC,MAJqB,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","components/Reviews/Reviews.styled.js","helpers/api.jsx"],"sourcesContent":["import { fetchMovieReviews } from 'helpers/api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { AuthorTitle, List } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchReview = async () => {\n      try {\n        const { results } = await fetchMovieReviews(movieId);\n        setReviews(results);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchReview();\n  }, [movieId]);\n\n  return (\n    <section>\n      <List>\n        {reviews.length > 0 ? (\n          reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <AuthorTitle>Author: {author}</AuthorTitle>\n              <p>{content}</p>\n            </li>\n          ))\n        ) : (\n          <p>We don`t have any reviews for this movie.</p>\n        )}\n      </List>\n    </section>\n  );\n};\n\nexport default Reviews;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  padding: 0px 16px;\n  margin-bottom: 32px;\n`;\n\nexport const AuthorTitle = styled.h3`\n  margin-bottom: 8px;\n`;\n","import axios from 'axios';\n\nconst BASE_URL = `https://api.themoviedb.org/3`;\nconst API_KEY = `fe343f967605f386408b9306e9b3c54f`;\n\nexport const fetchTrendingMovies = async () => {\n  const resp = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return resp.data;\n};\n\nexport const fetchMovieById = async id => {\n  const resp = await axios.get(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`);\n  return resp.data;\n};\n\nexport const fetchMovieCast = async id => {\n  const resp = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n  );\n  return resp.data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const resp = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  return resp.data;\n};\n\nexport const fetchMovieByKeyWord = async query => {\n  const resp = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return resp.data;\n};\n"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","fetchReview","fetchMovieReviews","results","console","log","length","map","id","author","content","List","styled","AuthorTitle","BASE_URL","API_KEY","fetchTrendingMovies","axios","resp","data","fetchMovieById","fetchMovieCast","fetchMovieByKeyWord","query"],"sourceRoot":""}